#!/usr/bin/env zsh

selected=${1:-$(
    local FD_CMD=${commands[fd]}
    local FZF_CMD=${commands[fzf]}
    local SORT_CMD=${commands[sort]}

    declare -A paths

    while IFS= read -r path; do
        display_path=${path#$HOME/dev/}
        paths[${display_path%/}]=$path
    done < <($FD_CMD . ~/dev --max-depth 1 --type d)

    while IFS= read -r path; do
        display_path=${path#$HOME/dev/}
        paths[${display_path%/}]=$path
    done < <($FD_CMD . ~/dev/misc --max-depth 1 --type d)

    while IFS= read -r path; do
        display_path=${path#$HOME/dev/}
        paths[${display_path%/}]=$path
    done < <($FD_CMD . ~/dev/package-abs/ --max-depth 1 --type d)

    paths[.dotfiles]="$HOME/.dotfiles"

    local -a keys
    keys=("${(@k)paths}")

    print -l "${(@)keys}" | $SORT_CMD -rf | $FZF_CMD | while read -r selected_display; do
        [[ -n $selected_display ]] && echo "${paths[$selected_display]}"
    done
)}

# Early return using short-circuit operator
[[ -z $selected ]] && exit 0

# Parameter expansion with substitution
selected_name=${$(basename "$selected")//\./_}
tmux_running=$(pgrep tmux)

# Set your tmux config file location
TMUX_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/tmux/tmux.conf"

# Case statement instead of if blocks
case "$TMUX$tmux_running" in
    # No tmux running at all
    "")
        tmux -f "$TMUX_CONFIG" new-session -s $selected_name -c $selected
        ;;
    # Tmux running but not in a session
    ${~tmux_running})
        # Create session if it doesn't exist, using anonymous function for grouping
        () {
            tmux has-session -t=$selected_name 2>/dev/null ||
                tmux new-session -ds $selected_name -c $selected
            # Source config for new session
            tmux source-file "$TMUX_CONFIG"
        }
        tmux attach-session -t $selected_name
        ;;
    # In a tmux session
    *)
        # Create session if it doesn't exist using && and ||
        tmux has-session -t=$selected_name 2>/dev/null ||
            (tmux new-session -ds $selected_name -c $selected && tmux source-file "$TMUX_CONFIG")
        tmux switch-client -t $selected_name
        ;;
esac
